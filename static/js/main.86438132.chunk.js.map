{"version":3,"sources":["components/card/card-component.jsx","components/card-list/card-list-component.jsx","components/search-box/searchbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","item","img","name","email","CardList","listItems","map","ele","id","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","monsters","fetch","then","response","json","users","user","setState","this","filteredMonsters","filter","monster","toLocaleLowerCase","includes","evt","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAEaA,EAAQ,SAACC,GAClB,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAI,GAAGC,IAAKH,EAAMI,KAAKC,MAC5B,6BACKL,EAAMI,KAAKE,MADPN,EAAMI,KAAKE,MAGpB,+BAAON,EAAMI,KAAKG,YCMfC,G,MAZA,SAACR,GACZ,OACI,qBAAKC,UAAU,aAAf,SAEQD,EAAMS,UAAUC,KAAI,SAAAC,GAChB,OAAO,cAAC,EAAD,CAAmBP,KAAMO,GAAdA,EAAIC,WCE3BC,G,MARC,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC3B,OACI,uBAAOd,UAAU,SAASe,KAAK,SAC3BF,YAAaA,EACbG,SAAUF,MCkCPG,E,kDAlCb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXC,YAAY,GACZC,SAAS,IAJA,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJA,EAAMhB,KAAI,SAAAiB,GACR,OAAOA,EAAKtB,IAAM,wBAAwBsB,EAAKf,GAAG,4BAEpD,EAAKgB,SAAS,CAACP,SAASK,S,oBAI5B,WAAS,IAAD,OACN,EAAgCG,KAAKV,MAA9BE,EAAP,EAAOA,SAAUD,EAAjB,EAAiBA,YACbU,EAAmBT,EAASU,QAAO,SAAAC,GACrC,OAAOA,EAAQ1B,KAAK2B,oBAAoBC,SAASd,EAAYa,wBAE/D,OACE,sBAAKhC,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,6BACA,cAAC,EAAD,CAAWa,YAAc,kBAAkBC,aAAgB,SAAAoB,GAAM,EAAKP,SAAS,CAACR,YAAae,EAAIC,OAAOC,WACxG,cAAC,EAAD,CAAU5B,UAAaqB,W,GA7BbQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.86438132.chunk.js","sourcesContent":["import \"./card-style.css\"\r\n\r\nexport const Card  = (props)=>{\r\n    return (\r\n        <div className=\"card\">\r\n            <img alt=\"\" src={props.item.img}/>\r\n            <h4 key={props.item.name}>\r\n                {props.item.name}\r\n            </h4>\r\n            <span>{props.item.email}</span>\r\n        </div>\r\n    );\r\n}","import { Card } from \"../card/card-component\";\r\nimport \"./card-list.styles.css\"\r\n\r\nlet CardList = (props)=>{\r\n    return(\r\n        <div className=\"cards-list\">\r\n            {\r\n                props.listItems.map(ele=>{\r\n                    return <Card key={ele.id} item={ele}/>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CardList","import \"./searchbox.styles.css\"\r\n\r\nlet SearchBox = ({placeholder, handleChange}) => {\r\n    return (\r\n        <input className=\"search\" type=\"search\" \r\n            placeholder={placeholder}\r\n            onChange={handleChange}/>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import './App.css';\nimport { Component } from 'react';\nimport CardList from './components/card-list/card-list-component';\nimport SearchBox from './components/search-box/searchbox.component';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      searchField:\"\",\n      monsters:[]\n    }\n  }\n\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(users => {\n      users.map(user=>{\n        return user.img = \"https://robohash.org/\"+user.id+\"?set=set2&size=180x180\";\n      });\n      this.setState({monsters:users})\n    });\n  }\n\n  render(){\n    const {monsters, searchField} = this.state;\n    let filteredMonsters = monsters.filter(monster=>{\n      return monster.name.toLocaleLowerCase().includes(searchField.toLocaleLowerCase());\n    });\n    return (\n      <div className=\"App\">\n        <h1 className='title'>First React App</h1>\n        <SearchBox placeholder = \"Search Keywords\" handleChange = {evt=>{this.setState({searchField: evt.target.value})}}/>\n        <CardList listItems = {filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}